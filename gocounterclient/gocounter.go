// Code generated by goctl. DO NOT EDIT.
// Source: go_counter.proto

package gocounterclient

import (
	"context"

	"go_counter/go_counter"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FavoriteNumRequest     = go_counter.FavoriteNumRequest
	FavoriteNumResponse    = go_counter.FavoriteNumResponse
	FavoriteRecordRequest  = go_counter.FavoriteRecordRequest
	FavoriteRecordResponse = go_counter.FavoriteRecordResponse
	LikeNumRequest         = go_counter.LikeNumRequest
	LikeNumResponse        = go_counter.LikeNumResponse
	LikeRecordRequest      = go_counter.LikeRecordRequest
	LikeRecordResponse     = go_counter.LikeRecordResponse
	PingRequest            = go_counter.PingRequest
	PingResponse           = go_counter.PingResponse
	ViewNumRequest         = go_counter.ViewNumRequest
	ViewNumResponse        = go_counter.ViewNumResponse
	ViewRecordRequest      = go_counter.ViewRecordRequest
	ViewRecordResponse     = go_counter.ViewRecordResponse

	GoCounter interface {
		Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
		// 点赞请求
		LikeNum(ctx context.Context, in *LikeNumRequest, opts ...grpc.CallOption) (*LikeNumResponse, error)
		LikeRecord(ctx context.Context, in *LikeRecordRequest, opts ...grpc.CallOption) (*LikeRecordResponse, error)
		// 收藏请求
		FavoriteNum(ctx context.Context, in *FavoriteNumRequest, opts ...grpc.CallOption) (*FavoriteNumResponse, error)
		FavoriteRecord(ctx context.Context, in *FavoriteRecordRequest, opts ...grpc.CallOption) (*FavoriteRecordResponse, error)
		// 浏览请求
		ViewNum(ctx context.Context, in *ViewNumRequest, opts ...grpc.CallOption) (*ViewNumResponse, error)
		ViewRecord(ctx context.Context, in *ViewRecordRequest, opts ...grpc.CallOption) (*ViewRecordResponse, error)
	}

	defaultGoCounter struct {
		cli zrpc.Client
	}
)

func NewGoCounter(cli zrpc.Client) GoCounter {
	return &defaultGoCounter{
		cli: cli,
	}
}

func (m *defaultGoCounter) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	client := go_counter.NewGoCounterClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

// 点赞请求
func (m *defaultGoCounter) LikeNum(ctx context.Context, in *LikeNumRequest, opts ...grpc.CallOption) (*LikeNumResponse, error) {
	client := go_counter.NewGoCounterClient(m.cli.Conn())
	return client.LikeNum(ctx, in, opts...)
}

func (m *defaultGoCounter) LikeRecord(ctx context.Context, in *LikeRecordRequest, opts ...grpc.CallOption) (*LikeRecordResponse, error) {
	client := go_counter.NewGoCounterClient(m.cli.Conn())
	return client.LikeRecord(ctx, in, opts...)
}

// 收藏请求
func (m *defaultGoCounter) FavoriteNum(ctx context.Context, in *FavoriteNumRequest, opts ...grpc.CallOption) (*FavoriteNumResponse, error) {
	client := go_counter.NewGoCounterClient(m.cli.Conn())
	return client.FavoriteNum(ctx, in, opts...)
}

func (m *defaultGoCounter) FavoriteRecord(ctx context.Context, in *FavoriteRecordRequest, opts ...grpc.CallOption) (*FavoriteRecordResponse, error) {
	client := go_counter.NewGoCounterClient(m.cli.Conn())
	return client.FavoriteRecord(ctx, in, opts...)
}

// 浏览请求
func (m *defaultGoCounter) ViewNum(ctx context.Context, in *ViewNumRequest, opts ...grpc.CallOption) (*ViewNumResponse, error) {
	client := go_counter.NewGoCounterClient(m.cli.Conn())
	return client.ViewNum(ctx, in, opts...)
}

func (m *defaultGoCounter) ViewRecord(ctx context.Context, in *ViewRecordRequest, opts ...grpc.CallOption) (*ViewRecordResponse, error) {
	client := go_counter.NewGoCounterClient(m.cli.Conn())
	return client.ViewRecord(ctx, in, opts...)
}
