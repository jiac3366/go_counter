// Code generated by goctl. DO NOT EDIT.
// Source: go_counter.proto

package server

import (
	"context"

	"go_counter/go_counter"
	"go_counter/internal/logic"
	"go_counter/internal/svc"
)

type GoCounterServer struct {
	svcCtx *svc.ServiceContext
	go_counter.UnimplementedGoCounterServer
}

func NewGoCounterServer(svcCtx *svc.ServiceContext) *GoCounterServer {
	return &GoCounterServer{
		svcCtx: svcCtx,
	}
}

func (s *GoCounterServer) Ping(ctx context.Context, in *go_counter.PingRequest) (*go_counter.PingResponse, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

// 点赞请求
func (s *GoCounterServer) LikeNum(ctx context.Context, in *go_counter.LikeNumRequest) (*go_counter.LikeNumResponse, error) {
	l := logic.NewLikeNumLogic(ctx, s.svcCtx)
	return l.LikeNum(in)
}

func (s *GoCounterServer) LikeRecord(ctx context.Context, in *go_counter.LikeRecordRequest) (*go_counter.LikeRecordResponse, error) {
	l := logic.NewLikeRecordLogic(ctx, s.svcCtx)
	return l.LikeRecord(in)
}

// 收藏请求
func (s *GoCounterServer) FavoriteNum(ctx context.Context, in *go_counter.FavoriteNumRequest) (*go_counter.FavoriteNumResponse, error) {
	l := logic.NewFavoriteNumLogic(ctx, s.svcCtx)
	return l.FavoriteNum(in)
}

func (s *GoCounterServer) FavoriteRecord(ctx context.Context, in *go_counter.FavoriteRecordRequest) (*go_counter.FavoriteRecordResponse, error) {
	l := logic.NewFavoriteRecordLogic(ctx, s.svcCtx)
	return l.FavoriteRecordV1(in)
}

// 浏览请求
func (s *GoCounterServer) ViewNum(ctx context.Context, in *go_counter.ViewNumRequest) (*go_counter.ViewNumResponse, error) {
	l := logic.NewViewNumLogic(ctx, s.svcCtx)
	return l.ViewNum(in)
}

func (s *GoCounterServer) ViewRecord(ctx context.Context, in *go_counter.ViewRecordRequest) (*go_counter.ViewRecordResponse, error) {
	l := logic.NewViewRecordLogic(ctx, s.svcCtx)
	return l.ViewRecord(in)
}
